#!/usr/bin/env ruby

require 'rubygems'
require 'grit'
require 'json'

$repo   = Grit::Repo.new(".")
$config = Grit::Config.new($repo)

def generate_payload
  old_commit, new_commit, ref = gets.split()
  commits = $repo.commits_between(old_commit, new_commit)
  commits.map! do |commit|
    {
      :removed   => filter(commit.diffs) { |d| d.deleted_file },
      :added     => filter(commit.diffs) { |d| d.new_file },
      :modified  => filter(commit.diffs) { |d| !d.deleted_file && !d.new_file },
      :id        => commit.sha,
      :message   => commit.message,
      :timestamp => commit.authored_date.iso8601,
      :author    => {
        :name  => commit.author.name,
        :email => commit.author.email
      },
    }
  end

  {
    :before   => old_commit,
    :after    => new_commit,
    :ref      => ref,
    :commits  => commits,
    :ref_name => ref.to_s.sub(/\Arefs\/(heads|tags)\//, ''),
    :repository => {
      :name => File.basename(Dir.pwd).sub(/\.git$/,'')
    }
  }
end

def filter(diffs)
  diffs.select { |e| yield e }.map(&:b_path)
end

# Gets all 'hookdata' prefixed key-value pairs from git config
def hookdata
  Hash[$config.keys.grep(/httphook\.(?!url$)/).map do |key|
    [key.sub(/.*\./, '').tr('-','_').to_sym, $config[key]]
  end]
end

url  = $config['httphook.url'] or raise 'destination POST URL not set'
data = { :payload => generate_payload.to_json }.merge(hookdata)
Net::HTTP.post_form(URI.parse(url), data)
